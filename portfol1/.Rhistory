knitr::opts_chunk$set(echo = TRUE)
library(foreign)
library(tidyverse)
library(haven)
library(furniture)
#install.packages('furniture')
library(stargazer)
library(texreg)
#install.packages('texreg')
library(gridExtra)
#install.packages('gridExtra')
library(psych)
library(car)
#install.packages('car')
library(nlme)
library(lme4)
library(lmerTest)
library(optimx)
#install.packages('optimx')
# oh my gosh this never ends.
# packages <- c('performance','interactions','HLMdiag','sjstats')
#
# installed_packages <- packages %in% rownames(installed.packages())
# if (any(installed_packages == FALSE)) {
#   install.packages(packages[!installed_packages])
# }
#devtools::install_github("goodekat/redres")
library(performance)
library(interactions)
library(HLMdiag)
library(redres)
library(sjstats)
data_raw <- haven::read_sav("https://github.com/MultiLevelAnalysis/Datasets-third-edition-Multilevel-book/raw/master/chapter%202/popularity/SPSS/popular2.sav")
View(data_raw)
View(data_raw)
View(data_raw)
?haven::as_factor()
data_raw <- haven::read_sav("https://github.com/MultiLevelAnalysis/Datasets-third-edition-Multilevel-book/raw/master/chapter%202/popularity/SPSS/popular2.sav") %>%
haven::as_factor()%>%
tibble::glimpse()
data_raw <- haven::read_sav("https://github.com/MultiLevelAnalysis/Datasets-third-edition-Multilevel-book/raw/master/chapter%202/popularity/SPSS/popular2.sav") %>%
haven::as_factor()%>%
summary()
?summary
data_raw <- haven::read_sav("https://github.com/MultiLevelAnalysis/Datasets-third-edition-Multilevel-book/raw/master/chapter%202/popularity/SPSS/popular2.sav") %>%
haven::as_factor()%>%
base::summary()
data_raw <- haven::read_sav("https://github.com/MultiLevelAnalysis/Datasets-third-edition-Multilevel-book/raw/master/chapter%202/popularity/SPSS/popular2.sav") %>%
haven::as_factor()%>%
data_raw <- haven::read_sav("https://github.com/MultiLevelAnalysis/Datasets-third-edition-Multilevel-book/raw/master/chapter%202/popularity/SPSS/popular2.sav") %>%
haven::as_factor()             # retain the labels from SPSS --> factor
data_raw <- haven::read_sav("https://github.com/MultiLevelAnalysis/Datasets-third-edition-Multilevel-book/raw/master/chapter%202/popularity/SPSS/popular2.sav")
View(data_raw)
summary(data_raw)
?mutate()
data_pop <- data_raw %>%
dplyr::mutate(id = paste(class,pupil, sep = "-") %>% #creating uniqe ids for student
factor()) %>%
dplyr::select(id,pupil:popteach)
View(data_raw)
View(data_raw)
View(data_raw)
View(data_pop)
tibble::glimpse(head(data_pop,10))
data_pop %>%
dplyr::select(extav, gender, texp, popluar) %>%
data.frame() %>%
stargazer::stargazer(header=F,type="text")
data_pop %>%
dplyr::select(extrav, gender, texp, popluar) %>%
data.frame() %>%
stargazer::stargazer(header=F,type="text")
data_pop %>%
dplyr::select(extrav, sex, texp, popluar) %>%
data.frame() %>%
stargazer::stargazer(header=F,type="text")
data_pop %>%
dplyr::select(extrav, sex, texp, popular) %>%
data.frame() %>%
stargazer::stargazer(header=F,type="text")
data_pop %>%
ggplot() +
aes(x = extrav, y = popular)+
geom_point()+
stat_smooth(method=lm)
data_pop %>%
ggplot() +
aes(x = extrav, y = popular)+
geom_point()+
stat_smooth(method=lm)+
facet_wrap(~ class)
data_pop %>%
dplyr::filter(class<=9)%>%
ggplot() +
aes(x = extrav, y = popular)+
geom_point()+
stat_smooth(method=lm)+
facet_wrap(~ class)
pop_lm_1 <- lm(popular ~ sex + extrav,data = data_pop)
summary(pop_lm_1)
avPlot(pop_lm_1)
avPlots(pop_lm_1)
pop_lm<- lm(popular ~ sex + extrav, data = data_pop)
summary(pop_lm_1)
2.78954+1.50508
predict3d(pop_lm,radius=0.5)
install.packages("predict3d")
predict3d(pop_lm,radius=0.5)
library(predict3d)
predict3d(pop_lm,radius=0.5)
rglwidget(elementId = "1st")
predict3d(pop_lm,radius=0.2)
predict3d(pop_lm,radius=0.2)
rglwidget(elementId = "1st")
?predict3d()
predict3d(pop_lm,radius=0.2, colorn=sex)
predict3d(pop_lm,radius=0.2,)
require(data_pop)
predict3d(pop_lm,radius=0.2)
require(data_pop)
?rglwidget()
null<-lmer(popular~1 + (1|class), data=data_pop, REML=TRUE)
summary(null)
performance::icc(null)
0.7/(0.7+1.22)
?lmer()
?scale()
install.packages('center')
#install.packages('center')
library(center)
install.packages('misty')
library(misty)
#install.packages('misty')
library(misty)
#center level-1 predictor at the grandmean
data_pop$cgm_extrav<-misty::center(data_pop$extrav)
data_pop$cgm_sex<-misty::center(data_pop$sex)
#center level-1 predictor at the clustermean
data_pop$cwc_extrav<-misty::center(data_pop$extrav, type="cwc", cluster = data_pop$class)
data_pop$cwc_extrav<-misty::center(data_pop$extrav, type="CWC", cluster = data_pop$class)
data_pop$cwc_sex<-misty::center(data_pop$sex, type="CWC", cluster = data_pop$class)
View(data_pop)
#My preference towards REML :D
onefix<-lmer(popular~1 + cgm_extrav + (1|class), data=data_pop, REML=TRUE)
summary(onefix)
performance::icc(onefix)
?icc()
performance::icc(onefix)
?icc()
#My preference towards REML :D
oneram<-lmer(popular~1 + cgm_extrav + (1 + cgm_extrav|class), data=data_pop, REML=TRUE)
summary(oneram)
performance::icc(onerandom)
performance::icc(oneran)
performance::icc(oneram)
#My preference towards REML :D
tworam<-lmer(popular~1 + cgm_extrav + cgm_sex + (1 + cgm_extrav+cgm_sex|class), data=data_pop, REML=TRUE)
summary(tworam)
#My preference towards REML :D
tworam<-lmer(popular~1 + cgm_extrav + cgm_sex + (1 + cgm_extrav+cgm_sex|class), data=data_pop)
summary(tworam)
#My preference towards REML :D
tworam<-lmer(popular~1 + cgm_extrav + cgm_sex + (1 + cgm_extrav+cgm_sex|class), data=data_pop)
summary(tworam)
#My preference towards REML :D
nointer<-lmer(popular~1 + cgm_extrav + cgm_sex + (1 + cgm_extrav+cgm_sex|class), data=data_pop)
summary(tworam)
ggplot(data      = data_pop,
aes(x     = extrav,
y     = popular,
col   = class,
group = class))+
geom_point(size     = 1,
alpha    = .5,
position = "jitter")
theme_minimal()+
theme(legend.position = "none")+
scale_color_gradientn(colours = rainbow(100))+
geom_smooth(method = lm,
se     = FALSE,
size   = .5,
alpha  = .8)+ # to add regression line
labs(title    = "Popularity vs. Extraversion")
ggplot(data      = data_pop,
aes(x     = extrav,
y     = popular,
col   = class,
group = class))+
geom_point(size     = 1,
alpha    = .5,
position = "jitter")
theme_minimal()+
theme(legend.position = "none")+
geom_smooth(method = lm,
se     = FALSE,
size   = .5,
alpha  = .8)+ # to add regression line
labs(title    = "Popularity vs. Extraversion")
ggplot(data      = data_pop,
aes(x     = extrav,
y     = popular,
col   = class,
group = class)) +
geom_point(size     = 1,
alpha    = .5,
position = "jitter") +
theme_minimal() +
theme(legend.position = "none") +
geom_smooth(method = lm,
se     = FALSE,
size   = .5,
alpha  = .8)+ # to add regression line
labs(title    = "Popularity vs. Extraversion")
?scale_colour_gradient()
ggplot(data      = data_pop,
aes(x     = extrav,
y     = popular,
col   = class,
group = class)) +
geom_point(size     = 1,
alpha    = .5,
position = "jitter") +
theme_minimal() +
theme(legend.position = "none") +
scale_colour_gradient() +
geom_smooth(method = lm,
se     = FALSE,
size   = .5,
alpha  = .8)+ # to add regression line
labs(title    = "Popularity vs. Extraversion")
ggplot(data      = data_pop,
aes(x     = extrav,
y     = popular,
col   = class,
group = class)) +
geom_point(size     = 1,
alpha    = .5,
position = "jitter") +
theme_minimal() +
theme(legend.position = "none") +
scale_colour_gradient(colours = rainbow(100)) +
geom_smooth(method = lm,
se     = FALSE,
size   = .5,
alpha  = .8)+ # to add regression line
labs(title    = "Popularity vs. Extraversion")
ggplot(data      = data_pop,
aes(x     = extrav,
y     = popular,
col   = class,
group = class)) +
geom_point(size     = 1,
alpha    = .5,
position = "jitter") +
theme_minimal() +
theme(legend.position = "none") +
geom_smooth(method = lm,
se     = FALSE,
size   = .5,
alpha  = .8)+ # to add regression line
labs(title    = "Popularity vs. Extraversion")
#My preference towards REML :D
#
nointer<-lmer(popular~1+cgm_etrav+cgm_sex+texp + (1+cgm_extrav+cgm_sex|class), data = data_pop)
#My preference towards REML :D
#
nointer<-lmer(popular~1+cgm_extrav+cgm_sex+texp + (1+cgm_extrav+cgm_sex|class), data = data_pop)
summary(nointer)
#My preference towards REML :D
#
inter<-lmer(popular~1+cgm_extrav+cgm_sex+texp + cgm_extrav*texp+cgm_sex*texp+ (1+cgm_extrav+cgm_sex|class), data = data_pop)
summary(inter)
#install.packages('misty')
library(misty)
#center level-1 predictor at the grandmean
data_pop$cgm_extrav<-misty::center(data_pop$extrav)
data_pop$cgm_sex<-misty::center(data_pop$sex)
data_pop$cgm_texp<-misty::center(data_pop$texp)
#center level-1 predictor at the clustermean
data_pop$cwc_extrav<-misty::center(data_pop$extrav, type="CWC", cluster = data_pop$class)
data_pop$cwc_sex<-misty::center(data_pop$sex, type="CWC", cluster = data_pop$class)
#My preference towards REML :D
#
inter<-lmer(popular~1+cgm_extrav+cgm_sex+cgm_texp + cgm_extrav*cgm_texp+cgm_sex*cgm_texp+ (1+cgm_extrav+cgm_sex|class), data = data_pop)
summary(inter)
performance::icc(inter)
#My preference towards REML :D
#
inter<-lmer(popular~1+cgm_extrav+cgm_sex+cgm_texp + cgm_extrav*cgm_texp+cgm_sex*cgm_texp+ (1+cgm_extrav+cgm_sex|class), data = data_pop)
summary(inter)
performance::icc(inter)
View(inter)
performance::icc(nointer)
performance::icc(inter)
#My preference towards REML :D
#
inter<-lmer(popular~1+cgm_extrav+cgm_sex+cgm_texp + cgm_extrav*cgm_texp+cgm_sex*cgm_texp+ (1+cgm_extrav+cgm_sex|class), data = data_pop)
summary(inter)
performance::icc(inter)
#My preference towards REML :D
#
inter<-lmer(popular~1+cgm_extrav+cgm_sex+texp + (1+cgm_extrav+cgm_sex|class), data = data_pop)
summary(inter)
performance::icc(inter)
performance::performance(inter)
performance::performance(nointer)
#My preference towards REML :D
#
inter<-lmer(popular~1+cgm_extrav+cgm_sex+cgm_texp + cgm_extrav*cgm_texp+cgm_sex*cgm_texp+ (1+cgm_extrav+cgm_sex|class), data = data_pop)
summary(inter)
performance::icc(inter)
knitr::opts_chunk$set(echo = TRUE)
#My preference towards REML :D
#
inter<-lmer(popular~1+cgm_extrav+cgm_sex+texp + (1+cgm_extrav+cgm_sex|class), data = data_pop)
knitr::opts_chunk$set(echo = TRUE)
library(foreign)
library(tidyverse)
library(haven)
library(furniture)
#install.packages('furniture')
library(stargazer)
library(texreg)
#install.packages('texreg')
library(gridExtra)
#install.packages('gridExtra')
library(psych)
library(car)
#install.packages('car')
library(nlme)
library(lme4)
library(lmerTest)
library(optimx)
#install.packages('optimx')
# oh my gosh this never ends.
# packages <- c('performance','interactions','HLMdiag','sjstats')
#
# installed_packages <- packages %in% rownames(installed.packages())
# if (any(installed_packages == FALSE)) {
#   install.packages(packages[!installed_packages])
# }
#devtools::install_github("goodekat/redres")
library(performance)
library(interactions)
library(HLMdiag)
library(redres)
library(sjstats)
library(predict3d)
data_raw <- haven::read_sav("https://github.com/MultiLevelAnalysis/Datasets-third-edition-Multilevel-book/raw/master/chapter%202/popularity/SPSS/popular2.sav")
summary(data_raw)
# we only take what we need
data_pop <- data_raw %>%
dplyr::mutate(id = paste(class,pupil, sep = "-") %>% #creating uniqe ids for student
factor()) %>%
dplyr::select(id,pupil:popteach)
tibble::glimpse(head(data_pop,10))
data_pop %>%
dplyr::select(extrav, sex, texp, popular) %>%
data.frame() %>%
stargazer::stargazer(header=F,type="text")
data_pop %>%
ggplot() +
aes(x = extrav, y = popular)+
geom_point()+
stat_smooth(method=lm)
data_pop %>%
dplyr::filter(class<=9)%>%
ggplot() +
aes(x = extrav, y = popular)+
geom_point()+
stat_smooth(method=lm)+
facet_wrap(~ class)
ggplot(data      = data_pop,
aes(x     = extrav,
y     = popular,
col   = class,
group = class)) +
geom_point(size     = 1,
alpha    = .5,
position = "jitter") +
theme_minimal() +
theme(legend.position = "none") +
geom_smooth(method = lm,
se     = FALSE,
size   = .5,
alpha  = .8)+ # to add regression line
labs(title    = "Popularity vs. Extraversion")
#install.packages('misty')
library(misty)
#center level-1 predictor at the grandmean
data_pop$cgm_extrav<-misty::center(data_pop$extrav)
data_pop$cgm_sex<-misty::center(data_pop$sex)
data_pop$cgm_texp<-misty::center(data_pop$texp)
#center level-1 predictor at the clustermean
data_pop$cwc_extrav<-misty::center(data_pop$extrav, type="CWC", cluster = data_pop$class)
data_pop$cwc_sex<-misty::center(data_pop$sex, type="CWC", cluster = data_pop$class)
pop_lm<- lm(popular ~ sex + extrav, data = data_pop)
summary(pop_lm)
#My preference towards REML :D
null<-lmer(popular~1 + (1|class), data=data_pop, REML=TRUE)
summary(null)
performance::icc(null)
#My preference towards REML :D
onefix<-lmer(popular~1 + cgm_extrav + (1|class), data=data_pop, REML=TRUE)
summary(onefix)
#My preference towards REML :D
oneram<-lmer(popular~1 + cgm_extrav + (1 + cgm_extrav|class), data=data_pop, REML=TRUE)
summary(oneram)
#My preference towards REML :D
tworam<-lmer(popular~1 + cgm_extrav + cgm_sex + (1 + cgm_extrav+cgm_sex|class), data=data_pop)
summary(tworam)
#My preference towards REML :D
#
inter<-lmer(popular~1+cgm_extrav+cgm_sex+texp + (1+cgm_extrav+cgm_sex|class), data = data_pop)
summary(inter)
pop_lm<- lm(popular ~ sex + extrav, data = data_pop)
summary(pop_lm)
#My preference towards REML :D
null<-lmer(popular~1 + (1|class), data=data_pop, REML=TRUE)
summary(null)
#My preference towards REML :D
onefix<-lmer(popular~1 + cgm_extrav + (1|class), data=data_pop, REML=TRUE)
summary(onefix)
#My preference towards REML :D
oneram<-lmer(popular~1 + cgm_extrav + (1 + cgm_extrav|class), data=data_pop, REML=TRUE)
summary(oneram)
#My preference towards REML :D
null<-lmer(popular~1 + (1|class), data=data_pop, REML=TRUE)
summary(null)
#My preference towards REML :D
onefix<-lmer(popular~1 + cgm_extrav + (1|class), data=data_pop, REML=TRUE)
summary(onefix)
#My preference towards REML :D
oneram<-lmer(popular~1 + cgm_extrav + (1 + cgm_extrav|class), data=data_pop, REML=TRUE)
summary(oneram)
#My preference towards REML :D
tworam<-lmer(popular~1 + cgm_extrav + cgm_sex + (1 + cgm_extrav+cgm_sex|class), data=data_pop)
summary(tworam)
tworam<-lmer(popular~1 + cgm_extrav + cgm_sex + (1 + cgm_extrav+cgm_sex|class), data=data_pop, REML=FALSE)
summary(tworam)
```{r}
?isSingular
tworam<-lmer(popular~1 + cgm_extrav + cgm_sex + (1 + cgm_extrav+cgm_sex|class), data=data_pop, REML=FALSE)
summary(tworam)
isSingular(tworam, tol = 1e-5)
#My preference towards REML :D
#
inter<-lmer(popular~1+cgm_extrav+cgm_sex+texp + (1+cgm_extrav+cgm_sex|class), data = data_pop)
summary(inter)
#My preference towards REML :D
#
inter<-lmer(popular~1+cgm_extrav+cgm_sex+cgm_texp + cgm_extrav*cgm_texp+cgm_sex*cgm_texp+ (1+cgm_extrav+cgm_sex|class), data = data_pop)
summary(inter)
inter<-lmer(popular~1+cgm_extrav+cgm_sex+texp + cgm_extrav*texp+cgm_sex*texp+ (1+cgm_extrav+cgm_sex|class), data = data_pop)
summary(inter)
tworam<-lmer(popular~1 + cgm_extrav + cgm_sex + (1 + cgm_extrav+cgm_sex|class), data=data_pop, REML=FALSE)
summary(tworam)
isSingular(tworam, tol = 1e-4)
#My preference towards REML :D
#
inter<-lmer(popular~1+cgm_extrav+cgm_sex+cgm_texp + cgm_extrav*cgm_texp+cgm_sex*cgm_texp+ (1+cgm_extrav+cgm_sex|class), data = data_pop)
summary(inter)
isSingular(inter, tol = 1e-4)
